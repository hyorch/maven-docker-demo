pipeline { 
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2 --network ci'
        }
    }
    environment {
        DOCKER_HUB = credentials("hyorch-docker-hub")
    }
    tools {
        maven 'Maven3'
    }
    stages { 
        stage('Maven Clean') { 
            steps {       
                sh "mvn clean" 
            }
        }
        stage('Maven Validate') { 
            //validate the project is correct and all necessary information is available
            steps {       
                sh "mvn validate" 
            }
        }
        stage('Maven Compile') { 
            steps {       
                sh "mvn compile" 
            }
        }
        stage('Maven Test') { 
            steps {       
                sh "mvn test" 
            }
        }

        stage('Code inspection & quality gate') {
            steps {
                echo "-=- run code inspection & check quality gate -=-"
                withSonarQubeEnv('ci-sonarqube') {
                    sh "mvn sonar:sonar"
                }
                timeout(time: 10, unit: 'MINUTES') {
                    //waitForQualityGate abortPipeline: true
                    script {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK' && qg.status != 'WARN') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }

        stage('Maven JIB dockerBuild') { 
            steps {       
                sh "mvn compile jib:docckderBuild" 
            }
        }
    }
    post {
        always {
            junit 'target/surefire-reports/*.xml'
        }
    }
}